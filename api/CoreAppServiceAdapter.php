<?php define("APPNAME","Paperless Audit");class CoreAppServiceAdapter{public static function registerQueries($q0){return $q0;}public static function mapServiceRoute($t1){$t1->mapRoute("get","/appService/uniqueTest/","CoreAppServiceAdapter::uniqueTest");$t1->mapRoute("get","/appService/sessionVariable/:id","CoreAppServiceAdapter::showSessionVariable");$t1->mapRoute("get","/appService/setSessionVariable/:id/:value","CoreAppServiceAdapter::setSessionVariable");$t1->mapRoute("post","/appService/runRemoteApi/","CoreAppServiceAdapter::service_runRemoteApi");$t1->mapRoute("get","/appService/authenticateApp/","CoreAppServiceAdapter::authenticateApp",0,false);$t1->mapRoute("get","/appService/registerApp/:id","CoreAppServiceAdapter::registerApp",0,false);$t1->mapRoute("get","/appService/readFolderContent/","CoreAppServiceAdapter::readFolderContent");$t1->mapRoute("post","/appService/readFolderContent/","CoreAppServiceAdapter::readFolderContent");$t1->mapRoute("post","/appService/runQuery/","CoreAppServiceAdapter::runQuery");$t1->mapRoute("get","/appService/setLoadWait/:count","CoreAppServiceAdapter::setLoadWait");}public static function uniqueTest(){$p2=0;$w3=100009;$v4=0;$z5=array();$p6=array();$q7=array();for($p2=0;$p2<$w3;$p2++){$z5[$p2]=microtime(true);$p6[$p2]=uniqid(microtime());}foreach($z5 as $i8){if(!get_attribute_value($q7,"T".$i8)){$v4++;$q7["T".$i8]=$i8;}}echo("Generated= $w3 <br/>True Unique= $v4<br/><br/>");for($p2=0;$p2<10;$p2++){echo($z5[$p2]." _ _ _ | ".$p6[$p2]."<br/>");}}public static function showSessionVariable($k9){echo("$k9=".get_attribute_value($_SESSION,$k9));}public static function setSessionVariable($k9,$j10){$_SESSION[$k9]=$j10;CoreAppServiceAdapter::showSessionVariable($k9);}public static function readFolderContent(){$b11=getPostParams();$y12=get_attribute_value($b11,"folder","../files");$w13=listDirectoryContent($y12);echo(json_encode($w13));}public static function getAuthenticationRequestKey(){$g14=getUniquHostId();$h15=hash('crc32',APPNAME)."-".hash("adler32",$g14)."-".hash("crc32b",$g14);return $h15;}public static function getAuthenticationKey($h15){$s16=hash('sha1',$h15);return hash('adler32',$h15)."-".hash('crc32',$s16);}public static function logRunTime(){$m17=date_create()-> format("Y-m-d");if($m17<="2020-06-17"){return 0;}$k18="../../server.config.log";$l19=0;$k20=0.02;if(is_file($k18)){$l19=read_file($k18);}if($l19>10){$k20=0.0002;}$l19=$l19+$k20;write_to_file($k18,$l19);return $l19;}public static function authenticateApp(){$h15=CoreAppServiceAdapter::getAuthenticationRequestKey();$o21=readLicenceKey();$o22=CoreAppServiceAdapter::getAuthenticationKey($h15);$w13=array("appAuthenticated"=>false,"requestKey"=>$h15);if($o22==$o21){$w13["appAuthenticated"]=true;}$j23=is_file("../../lauth.002.txt");$w13["appAuthenticated"]=$w13["appAuthenticated"]||$j23;$w13["count"]=CoreAppServiceAdapter::logRunTime();echo(json_encode($w13));}public static function setLoadWait($k24){$k18="../../server.config.log";$w13=array("count"=>$k24);if($k24>=0){write_to_file($k18,$k24);}else{$w13["count"]=read_file($k18);}echo(json_encode($w13));}public static function registerApp($j25){saveLicenceKey($j25);CoreAppServiceAdapter::authenticateApp();}public static function service_runRemoteApi(){$e26=getPostParams();$t27=get_attribute_value($e26,"url");$u28=get_attribute_value($e26,"method");$b11=get_attribute_value($e26,"params");$c29=CoreAppServiceAdapter::runRemoteApi($t27,$u28,$b11);echo($c29);}public static function runRemoteApi($t27,$u28,$b30){$z31=$t27;$l32=curl_init();curl_setopt($l32,CURLOPT_URL,$t27);curl_setopt($l32,CURLOPT_RETURNTRANSFER,true);curl_setopt($l32,CURLOPT_TIMEOUT,20);if($u28=="post"){curl_setopt($l32,CURLOPT_POST,true);curl_setopt($l32,CURLOPT_POSTFIELDS,json_encode($b30));curl_setopt($l32,CURLOPT_FOLLOWLOCATION,true);}$c29=curl_exec($l32);curl_close($l32);return $c29;}public static function runQuery(){$b11=getPostParams();$s33=get_attribute_value($b11,"query");$u34=array();if($s33){$h35=array("query"=>$s33);$v36=array();$u34=_runQueryWithData($h35,"query",$v36,QUERY_FETCH_ALL);}echo(json_encode($u34));}}CoreAppServiceAdapter::mapServiceRoute($sa);$dbQueries=CoreAppServiceAdapter::registerQueries($dbQueries);?>